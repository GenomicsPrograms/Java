/*
 * Author: Margaret Linan
 * Organization: SII
 * Purpose: To find telomeric repeat patterns in NGS reads. 
 * Date: 9/07/2016
 * Instructions: Create a text file that contains four columns: read identifier, 
 * chromosome, position, and sequence.
 */
package patternseq1;
import java.io.*;
import java.util.regex.*;

/**
 *
 * @author margaret
 */
public class PatternSeq1 {
       
    public void replacePattern(String arg_sInputFileName1, String arg_sOutputFileName1, String arg_sOutputFileName2, String arg_sOutputFileName3)
   
        throws Exception {
        BufferedReader dataReader = new BufferedReader(new FileReader(arg_sInputFileName1));
        String sCurrentLine;
        try (PrintWriter taggedTelomereGCs = new PrintWriter(new FileWriter(arg_sOutputFileName1))) {
        try (PrintWriter extractedTels = new PrintWriter(new FileWriter(arg_sOutputFileName2)))     {
        try (PrintWriter extractedGCs = new PrintWriter(new FileWriter(arg_sOutputFileName3)))      {
            while ((sCurrentLine = dataReader.readLine()) != null) {
                String [] aLines = sCurrentLine.split(" ");
                String [] aInfo= new String[] {aLines[0], aLines[1], aLines[2], aLines[3]};
                String sPatternONE = "(TTAGGG{1,})\\1+";                
                String sFirstPass = Pattern.compile(sPatternONE).matcher(aInfo[3]).replaceAll("^");
                String sPatternTWO = "(TCAGGG{1,})\\1+";
                String sSecondPass = Pattern.compile(sPatternTWO).matcher(sFirstPass).replaceAll("+");
                String sPatternTHREE = "(TGAGGG{1,})\\1+";
                String sThirdPass = Pattern.compile(sPatternTHREE).matcher(sSecondPass).replaceAll("-");
                String sPatternFOUR = "(TTGGGG{1,})\\1+";
                String sFourthPass = Pattern.compile(sPatternFOUR).matcher(sThirdPass).replaceAll("~");
                              
                String sPatternALL = "([\\^\\+\\-\\~]){1,}"; Pattern all = Pattern.compile(sPatternALL); Matcher t = all.matcher(sFourthPass);
                  
               while (t.find() != false ) {     
                   String sData_extractedTels = aInfo[0] + "\t" + aInfo[1] + "\t" + aInfo[2] + "\t" + t.group(0);
                   extractedTels.println(sData_extractedTels); }
                
                String sPatternGC = "(GC)";
                String sFifthPass = Pattern.compile(sPatternGC).matcher(sFourthPass).replaceAll("*");
                int iCount_GCs = 0; int iCount_TRs1 = 0; int iCount_TRs2 = 0; int iCount_TRs3 = 0; int iCount_TRs4 = 0;
             
                // Count occurences of patterns in output file 1, the aim is to print the counts by the actual codified sequences // 
                for(int i =0; i < sFifthPass.length(); i++)
                    if(sFifthPass.charAt(i) == '*')
                    iCount_GCs++;
                
                for(int i =0; i < sFifthPass.length(); i++)
                    if(sFifthPass.charAt(i) == '^')
                    iCount_TRs1++; 
                
                for(int i =0; i < sFifthPass.length(); i++)
                    if(sFifthPass.charAt(i) == '+')
                    iCount_TRs2++; 
                
                for(int i =0; i < sFifthPass.length(); i++)
                    if(sFifthPass.charAt(i) == '-')
                    iCount_TRs3++; 
                
                for(int i =0; i < sFifthPass.length(); i++)
                    if(sFifthPass.charAt(i) == '~')
                    iCount_TRs4++; 
                
                String sReplacedGCs = aInfo[0] + "\t" + aInfo[1] + "\t" + aInfo[2] + "\t" + "TelomereRepeats = " + (iCount_TRs1+iCount_TRs2+iCount_TRs3+iCount_TRs4) + "\t" + " GCs = " + iCount_GCs + "\t" + sFifthPass;          
                taggedTelomereGCs.println(sReplacedGCs); 
                
                String sPatternGCs = "(\\*)+"; Pattern GCs = Pattern.compile(sPatternGCs); Matcher gc = GCs.matcher(sFifthPass);
                
                while (gc.find() != false ) {   
                   String sData_extracted_GCs = aInfo[0] + "\t" + aInfo[1] + "\t" + aInfo[2] + "\t" + gc.group(0);
                   extractedGCs.println(sData_extracted_GCs); }
                
            }}}}}    
   
    public static void main(String[] args) {
            PatternSeq1 analyzer = new PatternSeq1();
                String args_sInputFileName1 = "C:\\Users\\margaret\\Desktop\\PatternSeq\\input.txt";
                String arg_sOutputFileName1 = "C:\\Users\\margaret\\Desktop\\PatternSeq\\Pattern_Analysis_Results.txt";
                String arg_sOutputFileName2 = "C:\\Users\\margaret\\Desktop\\PatternSeq\\Extracted_TelomereRepeats.txt";
                String arg_sOutputFileName3 = "C:\\Users\\margaret\\Desktop\\PatternSeq\\Extracted_GCs.txt";
		try { 
			analyzer.replacePattern(args_sInputFileName1, arg_sOutputFileName1, arg_sOutputFileName2, arg_sOutputFileName3);
                        
                        
		} catch (Exception exp){
}}}
